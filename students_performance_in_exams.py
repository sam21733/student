# -*- coding: utf-8 -*-
"""Students Performance in Exams

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/students-performance-in-exams-a286185b-f129-4c60-8f02-60e4e35470bb.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20240903/auto/storage/goog4_request%26X-Goog-Date%3D20240903T062004Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D52e8827ed3d3ddec439aaec4c06ed4fc3190a876488601d3e2ab5f1cc1cc1e4a6ad00d6a519a89ddd8deb811db23f4712e0872dc5984f613a41c9fabb5e998e808ebdc781a6082ccf36d92237a7ce2542c6f4cf43d464451ecabc27a96d2f94635bb987800d4a1682d2fa73b6d55f4775da922a17ff302f4e4419783a193dc24613111d70408140e0492967ef1a7258c1363d479ef4a6d0eb470f9c8ff38d7a5077ad637e01fa27858f86f519ab12a71aa5652bacd64709c64b3df22b24741b13df9542750942334436a40e6d85474079b42287abea57683dd70f6d658d43a770a3af21c86e924215bdabd3915d3c935874ad11da9d5a17832ee629d645d2b6f
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

students = pd.read_csv('/content/StudentsPerformance.csv')
students.head()

students.info()

students.describe()

# check missing values
students.isna().sum()

plt.figure(figsize=(10,6))
plt.pie(students['gender'].value_counts(), colors=['pink','blue'], labels=[ 'Female', 'Male'], autopct='%1.2f%%', startangle=90)
plt.title('Gender')
plt.show()

plt.figure(figsize=(10,6))
plt.pie(students['race/ethnicity'].value_counts(), labels=['Group A', 'Group B', 'Group C', 'Group D', 'Group E'], autopct='%1.2f%%')
plt.title('Race/ethnicity', fontweight='bold')
plt.show()

plt.figure(figsize=(10,6))
plt.bar(students['parental level of education'].value_counts().index, students['parental level of education'].value_counts().values,color=["orange","green","blue","yellow","pink","red"])

plt.title('Parental Level Of Education')
plt.xlabel('Parental Level Of Education')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(10,6))

plt.pie(students['lunch'].value_counts(),colors=['blue','pink'],labels=['standard', 'free/reduced'],autopct='%1.2f%%')
plt.title('Lunch')
plt.legend()
plt.show()

plt.figure(figsize=(10,6))
plt.pie(students['test preparation course'].value_counts() ,labels=['None','Completed'], autopct='%1.2f%%', startangle=90)
plt.title('Test preparation course')
plt.legend()
plt.show()

plt.subplots(figsize=(15,5))
students['math score'].value_counts(normalize = True)
students['math score'].value_counts(dropna = False).plot.bar(figsize = (18, 10))
plt.title('Comparison of math scores')
plt.xlabel('Maths Marks / score')
plt.ylabel('count')
plt.show()

plt.subplots(figsize=(15,5))
students['reading score'].value_counts(normalize = True)
students['reading score'].value_counts(dropna = False).plot.bar(figsize = (18, 10), color = 'orange')
plt.title('Comparison of Reading Scores')
plt.xlabel('Reading Marks / Score')
plt.ylabel('Sount')
plt.show()

plt.subplots(figsize=(15,5))
students['writing score'].value_counts(normalize = True)
students['writing score'].value_counts(dropna = False).plot.bar(figsize = (18, 10), color = 'green')
plt.title('Comparison of Writing scores')
plt.xlabel('Writing marks / Score')
plt.ylabel('Count')
plt.show()

plt.figure(figsize = (16,5))


plt.subplot(1, 3, 1)
sns.histplot(data=students,x='math score',kde=True)

plt.subplot(1, 3, 2)
sns.histplot(data=students,x='reading score',kde=True)

plt.subplot(1, 3, 3)
sns.histplot(data=students,x='writing score',kde=True)

plt.show()

cm=students[['math score','reading score','writing score']].corr()
sns.heatmap(cm, annot=True)
plt.show()

